:{$PORT}

log {
    format json
    level DEBUG
}

# Basic settings
encode gzip
root * /srv

# Global headers
header {
    # Enable CORS
    Access-Control-Allow-Origin *
    Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, Sec-WebSocket-Protocol"
    
    # Security headers without CSP (handled by Reflex)
    X-Content-Type-Options nosniff
    X-Frame-Options DENY
    X-XSS-Protection "1; mode=block"
    Referrer-Policy "strict-origin-when-cross-origin"
    Permissions-Policy "geolocation=(), microphone=(), camera=()"
}

# Handle CORS preflight requests
@cors_preflight method OPTIONS
handle @cors_preflight {
    header {
        Access-Control-Allow-Origin *
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization, Sec-WebSocket-Protocol"
        Access-Control-Max-Age 86400
    }
    respond 204
}

# Handle WebSocket events
@websocket {
    path /_event*
    header Connection *Upgrade*
    header Upgrade websocket
}

handle @websocket {
    reverse_proxy localhost:{$BACKEND_PORT}
}

# Handle backend routes
handle_path /api/* {
    uri strip_prefix /api
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle_path /stream/* {
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle_path /key/* {
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle_path /content/* {
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle_path /logo/* {
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle_path /playlist.m3u8 {
    reverse_proxy localhost:{$BACKEND_PORT}
}

handle /health {
    reverse_proxy localhost:{$BACKEND_PORT}
}

# Handle all other requests
handle {
    # Try static files first
    try_files {path} /index.html
    file_server
}
